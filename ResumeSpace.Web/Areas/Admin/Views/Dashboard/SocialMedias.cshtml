<!-- Center Modal example -->
<div id="mdlAddAndUpdate" class="modal fade bs-example-modal-center modal-lg" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form id="frm" class="needs-validation">
                <div class="modal-header">
                    <h5 id="mdlTitle" class="modal-title">Social Media</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                    </button>
                </div>
                <div class="modal-body">
                        <div class="row mb-2">
                            <label for="ddlSocialMediaIcon">Social Media :</label>
                            <select id="ddlSocialMediaIcon" class="form-select">
                              <option selected>Please choose option</option>
                            </select>
                        </div>
                        <div class="row mb-2">
                            <label for="txtUrl">Url :</label>
                            <input class="form-control" type="text" id="txtUrl" placeholder="Please enter url" />
                        </div>
                        <div class="row mb-2">
                          <label for="ddlResume">Resumes :</label>
                          <select id="ddlResume" name="resumes[]" multiple="multiple" style="width: 100%" >
                          </select>
                        </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-light" data-bs-dismiss="modal">Close</button>
                    <button id="btnSave" type="submit" class="btn btn-success">Save</button>
                </div>
            </form>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                <div class="row">
                    @if (!User.IsInRole("Admin"))
                    {
                        <div class="col-md-6">
                            <div class="mb-3">
                                <a onclick="add()" class="btn btn-success waves-effect waves-light"><i class="mdi mdi-plus me-2"></i> Add New</a>
                            </div>
                        </div>
                    }
                </div>
                <!-- end row -->
                <div class="row">
                    <table id="datatable" class="table table-centered table-nowrap table-hover mb-0">
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts
{
    <script src="~/js/customSwalButton.js"></script>
    <script src="~/admin/libs/select2/js/select2.min.js"></script>
    <script>
        const isAdmin = '@User.IsInRole("Admin")' === "True" ? true : false;
        let datatable;
        $(document).ready(() =>
        {
            $("#ddlResume").select2(
                {
                    dropdownParent: $('#mdlAddAndUpdate'),
                    width: "resolve",
                    theme: "kagan"
                }
            )
            fillDatatable();
        });
        function fillDatatable()
        {
            datatable = $("#datatable").DataTable
                ({
                    paging: false,
                    pageLenght: 100,
                    ajax: "/Admin/SocialMedia/GetAllSocialMedia",
                    columns:
                    [
                        { data: "socialMediaIcon.name", title: "Name" },
                        { data: "url", title: "Url" },
                        {
                          data: "resumes",
                          title: "Resumes attached",
                          render: (data) => {
                            let txt = '';
                            for (let item of data)
                              txt += `<span>${item.resumeName}</span><br>`;
                            return txt;
                          }
                        },
                        {
                            data: "guid",
                            title: "Actions",
                            visible: !isAdmin,
                            render: (guid, type, row) =>
                            {
                                return `<ul class="list-inline mb-0">
                                            <li class="list-inline-item">
                                                <a onclick="update('${guid}', this)" class="px-2 text-primary"><i class="uil uil-pen font-size-18"></i></a>
                                            </li>
                                            <li class="list-inline-item">
                                                <a onclick="remove('${guid}', this)" class="px-2 text-danger"><i class="uil uil-trash-alt font-size-18"></i></a>
                                            </li>
                                            <li class="list-inline-item dropdown">
                                                <a class="text-muted dropdown-toggle font-size-18 px-2" href="#" role="button" data-bs-toggle="dropdown" aria-haspopup="true">
                                                    <i class="uil uil-ellipsis-v"></i>
                                                </a>
                                                <div class="dropdown-menu dropdown-menu-end">
                                                    <a class="dropdown-item" onclick="toggleStatus(this)">
                                                        <i class="${row.isActive ? "uil-check-circle" : "uil-times-circle" } me-2
                                                        text-${row.isActive ? "success" : "danger" }" style="font-size: 19px"></i>${row.isActive ? "Make passive" : "Make active" }
                                                    </a>
                                                </div>
                                            </li>
                                        </ul>`
                            }
                        },
                        {
                            data: "isActive",
                            title: "Activity State",
                            render: (data) => `<i style="font-size: 25px" class="${data ? "uil-check-circle text-success" : "uil-times-circle text-danger"}"></i>`
                        },
                    ],
                    columnDefs:
                    [
                        {
                            targets: [3, 4],
                            visible: true,
                            className: "text-center",
                            width: "5px"
                        },
                    ],
                });
        }
        function add()
        {
          toggleModal();
          fillDdlResume();
          fillDdlSocialMediaIcon();
          clearModal();
          $("#btnSave").off().text("Save").removeClass("btn-warning").addClass("btn-success").click(() =>
            {
              event.preventDefault();
              if (!checkValidateForm())
                return;
              let data =
                {
                  socialMediaIconId: $("#ddlSocialMediaIcon").val(),
                  url: $("#txtUrl").val(),
                  resumesSocialMedias: [],
                }
              for (let resumeId of $("#ddlResume").val())
                data.resumesSocialMedias.push({ resumeId: resumeId });
              $.ajax(
                {
                  url: "/Admin/SocialMedia/AddSocialMedia",
                  type: "POST",
                  contentType: "application/json",
                  data: JSON.stringify(data),
                  success: (res) =>
                  {
                    datatable.row.add(res).draw();
                    toggleModal();
                    SwalToast.fire
                    ({
                      icon: "success",
                      title: "Saved"
                    });
                  }
                }
              );
            });
        }
        function toggleStatus(element)
        {
            let row = $(element).parents("tr");
            let data = datatable.row(row).data();
            $.ajax(
                {
                    url: "/Admin/SocialMedia/ToggleStatus",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(data.guid),
                    success: () =>
                    {
                        SwalToast.fire(
                            {
                                icon: "success",
                                title: !data.isActive ? "Activated" : "Deactivated"
                            });
                        data.isActive = !data.isActive;
                        datatable.row(row).data(data).draw();
                    },
                    error: (err) =>
                    {
                        SwalToast.fire
                            ({
                                icon: "error",
                                title: "Something went wrong"
                            });
                    }
                }
            )
        }
        function remove(guid, element)
        {
            SwalRemove
                .fire()
                .then(result =>
                {
                    if(result.isConfirmed)
                    {
                        $.ajax
                        ({
                            url: "/Admin/SocialMedia/RemoveSocialMedia",
                            type: "GET",
                            contentType: "application/json",
                            data: { guid: guid },
                            success: res =>
                            {
                                datatable.row($(element).parents("tr")).remove().draw();
                                SwalToast.fire
                                ({
                                    icon: "success",
                                    title: "Deleted"
                                });
                            },
                            error: (err) =>
                            {
                                SwalToast.fire
                                ({
                                    icon: "error",
                                    title: "Something went wrong"
                                });
                            }
                        })
                    }
                });
        }
        function update(guid, element)
        {
          toggleModal();
          clearModal();
          let row = $(element).parents("tr");
          let oldData = datatable.row(row).data();
          oldData.resumes = oldData.resumes;
          $("#txtUrl").val(oldData.url);
          fillDdlSocialMediaIcon(oldData.socialMediaIcon);
          fillDdlResume(oldData.resumes);
          $("#btnSave").off().text("Update").removeClass("btn-success").addClass("btn-warning").click(() =>
            {
              event.preventDefault();
              if (!checkValidateForm())
                return;
              let data =
                {
                  guid: oldData.guid,
                  socialMediaIconId: $("#ddlSocialMediaIcon").val(),
                  url: $("#txtUrl").val(),
                  isActive: oldData.isActive,
                  resumesSocialMedias: [],
                }
              for (let resumeId of $("#ddlResume").val())
                data.resumesSocialMedias.push({ resumeId: resumeId });
              $.ajax(
                {
                  url: "/Admin/SocialMedia/UpdateSocialMedia",
                  type: "POST",
                  contentType: "application/json",
                  data: JSON.stringify(data),
                  success: (res) =>
                  {
                    datatable.row(row).data(res).draw();
                    toggleModal();
                    SwalToast.fire
                    ({
                      icon: "success",
                      title: "Updated"
                    });
                  }
                }
              );
            });
        }
        function checkValidateForm()
        {
          if ($("#frm").parsley().isValid() === false)
          {
            $("#frm").parsley().validate();
            $("#frm").addClass("was-validated");
            return false;
          }
          return true;
        }
        function fillDdlSocialMediaIcon(selectedIcon)
        {
          $.ajax({
            url: "/Admin/SocialMediaIcon/GetAllSocialMediaIcon",
            type: "GET",
            success: (res) => {
              for (let icon of res.data)
              {
                $("#ddlSocialMediaIcon").append(
                  new Option(icon.name, icon.id, false, selectedIcon === undefined ? false : icon.id === selectedIcon.id)
                )
              }
            }
          });
        }
        function fillDdlResume(resumes)
        {
            $.ajax(
                {
                    url: "/Admin/Resume/GetAll",
                    type: "GET",
                    success: (res) =>
                    {
                        for (let resume of res.data)
                        {
                            $("#ddlResume").append(
                                new Option(resume.resumeName, resume.id,
                                    false,
                                    resumes === undefined ? false : resumes.find(r => r.guid === resume.guid) !== undefined)
                                );
                        }
                    },
                    error: (_, status) => console.error(status)
                }
            )
        }
        function clearModal()
        {
            $("#ddlResume").empty();
            $("#ddlSocialMediaIcon").empty();
            $("#mdlAddAndUpdate input").val("");
            resetFormValidate();
        }
        function resetFormValidate()
        {
          $("#frm").parsley().reset();
          $("#frm").removeClass("was-validated");
        }
        function toggleModal()
        {
            const mdlAddAndUpdate = $("#mdlAddAndUpdate");
            if (mdlAddAndUpdate.hasClass("show"))
                mdlAddAndUpdate.modal("hide");
            else
                mdlAddAndUpdate.modal("show");
        }
    </script>
}